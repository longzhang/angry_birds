    server {
        listen       80;
        server_name  *.ns.com _;
        root         /data/www;
        index        index.html index.htm;
        access_log  /dev/stdout  main;
        error_log  /dev/stdout;

        location = /set {
            set_unescape_uri $key $arg_key; 
            set_unescape_uri $val $arg_val;
            redis2_query set $key $val;
            redis2_pass redis.com:6379;
        }

        location = /get {
            set_unescape_uri $key $arg_key; 
            redis2_query get $key;
            redis2_pass redis.com:6379;
        }

        location / {
            default_type text/html;
            set $ip_port ' ';
            rewrite_by_lua '
                local host = ngx.var.host
                local html = string.format("<p> %s</p>", host)
                local key = ngx.var.host
                local res = ngx.location.capture( "/get", 
                    { args = { key = key } 
                    }
                )
                local parser = require "redis.parser"
                local server, typ = parser.parse_reply(res.body)
                ngx.var.ip_port = server
            ';
           resolver 183.60.83.19;
           proxy_pass http://$ip_port;
           proxy_redirect off;
           proxy_set_header Host $host;
           proxy_set_header X-Forwaded-For $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

    }
